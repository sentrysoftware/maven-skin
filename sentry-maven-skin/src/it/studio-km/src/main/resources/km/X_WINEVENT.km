!PATROLV3.6.00i 9C995318ECBFC63588548C5CC48BE6DD
!#MSG_DOMAIN	swsy_sec
!++
!
! PATROL Session Knowledge Module
!
!--
!RELEASE	8.6.01
!REVISION	00
!PACKAGE	swsy
!DESCRIPTION	Monitoring Studio KM for PATROL
!PRODUCTCODE	swsy


VERSION 8.621

APPLICATIONS = { 
  { NAME = "X_WINEVENT",
	ACTIVE = True,
	SECURITY = False,
	PROPAGATE_STATE = True,
	CREATE_ICON = False,
	SUSPEND_GLOBAL_PARAMS = False,
	DISCOVERY_TIME = 0,
	DISCOVERY = PSL,
	PRE_DISCOVERY_TEXT =  1505460197 "# This monitors the events in the Windows Event Log that match the specified criteria.\
# Available for Windows hosts only.",
	DISCOVERY_TEXT =  1505460197 "#",
	HELP_FILE = "X_help.hlp",
	HELP_CONTEXT_ID = 207,
	OK_PICTURE = "X_WINEVENT_ok",
	WRONG_PICTURE = "X_WINEVENT_warn",
	COMMANDS = {
		{ NAME = "Refresh Parameters", AVAILABILITY = AVAILABLE_ONLINE, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1416580288 "# Refreshes all instance parameters of the X_WINEVENT application class.\
requires X_generic;\
\
swGenericRefreshParameters(get(\"appType\"), get(\"sid\"));"}
				}
		}

	},
	INFO_BOX = {
		{ NAME = "ID", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1033399933 "# PATROL internal identifier of the Windows Events instance.\
requires X_shared;\
\
print(swSentryInfobox(get(\"sid\"), \"ID\"));"}
				}
		},
		{ NAME = "Parent ID", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1033399946 "# PATROL internal identifier of the parent object.\
requires X_shared;\
\
print(swSentryInfobox(get(\"sid\"), \"parentID\"));"}
				}
		},
		{ NAME = "Event Log", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1033389680 "# Indicates which event log is searched.\
requires X_winevent;\
\
print (swInfoboxWinEvent(get(\"sid\"), \"eventLog\"));"}
				}
		},
		{ NAME = "Provider", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1033389663 "# Indicates the provider selected.\
requires X_winevent;\
\
print (swInfoboxWinEvent(get(\"sid\"), \"provider\"));"}
				}
		},
		{ NAME = "Event ID", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1033389630 "# ID of the event to be searched.\
requires X_winevent;\
\
print (swInfoboxWinEvent(get(\"sid\"), \"eventID\"));"}
				}
		},
		{ NAME = "Acknowledging Event ID", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1033393227 "# Event IDs that will acknowledge the detected events.\
requires X_winevent;\
\
print (swInfoboxWinEvent(get(\"sid\"), \"acknowledgeEventID\"));"}
				}
		},
		{ NAME = "Acknowledge", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1033393403 "# Indicates what is to be acknowledged: one event or all events.\
requires X_winevent;\
\
print (swInfoboxWinEvent(get(\"sid\"), \"acknowledgeAlerts\"));"}
				}
		},
		{ NAME = "Timeout", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1033393261 "# Time after which a matching Windows Event is acknowledged.\
requires X_winevent;\
\
print (swInfoboxWinEvent(get(\"sid\"), \"timeout\"));"}
				}
		},
		{ NAME = "Run Alert Actions", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1033389687 "# Indicates when Alert Actions should be executed.\
requires X_winevent;\
\
print (swInfoboxWinEvent(get(\"sid\"), \"runAlertActions\"));"}
				}
		}

	},
	PARAMETERS = {
		{	NAME = "winEventColl", PARAM_TYPE = COLLECTOR, ACTIVE = True, MONITOR = False, CHECK = False,
 HELP_FILE = "X_help.hlp",
 HELP_CONTEXT_ID = 207,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1174828671 "requires X_genericcollector;\
\
swGenericCollector(get(\"appType\"), get(\"sid\"), get(\"name\"));"}
				},
			START = "ASAP",
			POLL_TIME = "120", EXTERNAL_POLLING = False
		},
		{	NAME = "MatchingEventRate", PARAM_TYPE = CONSUMER, ACTIVE = True, MONITOR = True, CHECK = False,
 HELP_FILE = "X_help.hlp",
 HELP_CONTEXT_ID = 207,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "OS",
				  COMMAND_TEXT =  1422842440 "# Rate at which Windows Events are found.\
# Value set by winEventColl.\
"}
				},
			TITLE = "Matching Event Rate", UNITS = "events/min",
			HISTORY_TIME = "600", HISTORY_SPAN = 0, HISTORY_LEVEL = False,
			FORMAT = "%f", OUTPUT = OUTPUT_GRAPH,
			AUTO_RESCALE = True, Y_AXIS_MIN = 0, Y_AXIS_MAX = 100,
			RANGES = {
			  { NAME = "BORDER", ACTIVE = False, MINIMUM = 0, MAXIMUM = 100, STATE = OK, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  },
			  { NAME = "ALARM1", ACTIVE = False, MINIMUM = 0, MAXIMUM = 100, STATE = OK, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  },
			  { NAME = "ALARM2", ACTIVE = False, MINIMUM = 100, MAXIMUM = 100, STATE = OK, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  }
			}
		},
		{	NAME = "MatchingEventCount", PARAM_TYPE = CONSUMER, ACTIVE = True, MONITOR = True, CHECK = False,
 HELP_FILE = "X_help.hlp",
 HELP_CONTEXT_ID = 207,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "OS",
				  COMMAND_TEXT =  1428647997 "# Number of matching Windows Events.\
# Value set by winEventColl."}
				},
			TITLE = "Matching Event Count", UNITS = "events",
			HISTORY_TIME = "600", HISTORY_SPAN = 0, HISTORY_LEVEL = False,
			FORMAT = "%f", OUTPUT = OUTPUT_GRAPH,
			AUTO_RESCALE = True, Y_AXIS_MIN = 0, Y_AXIS_MAX = 2147483646,
			RANGES = {
			  { NAME = "BORDER", ACTIVE = False, MINIMUM = 0, MAXIMUM = 100, STATE = OK, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  },
			  { NAME = "ALARM1", ACTIVE = True, MINIMUM = 1, MAXIMUM = 2147483646, STATE = ALARM, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  },
			  { NAME = "ALARM2", ACTIVE = False, MINIMUM = 2147483646, MAXIMUM = 2147483646, STATE = OK, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  }
			}
		},
		{	NAME = "MatchingEvents", PARAM_TYPE = CONSUMER, ACTIVE = True, MONITOR = True, CHECK = False,
 HELP_FILE = "X_help.hlp",
 HELP_CONTEXT_ID = 207,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "OS",
				  COMMAND_TEXT =  1423195834 "# Lists all matching events, which are counted in MatchingEventCount.\
# Value set by winEventColl.\
"}
				},
			TITLE = "Matching Events",
			HISTORY_TIME = "600", HISTORY_SPAN = 0, HISTORY_LEVEL = False,
			FORMAT = "%s", OUTPUT = OUTPUT_TEXT,
			AUTO_RESCALE = True, Y_AXIS_MIN = 0, Y_AXIS_MAX = 100,
			RANGES = {
			  { NAME = "BORDER", ACTIVE = False, MINIMUM = 0, MAXIMUM = 100, STATE = OK, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  },
			  { NAME = "ALARM1", ACTIVE = False, MINIMUM = 0, MAXIMUM = 100, STATE = OK, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  },
			  { NAME = "ALARM2", ACTIVE = False, MINIMUM = 100, MAXIMUM = 100, STATE = OK, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  }
			}
		}

	}
  }
}
!14528
