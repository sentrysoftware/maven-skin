!PATROLV3.6.00i 9C995318ECBFC63588548C5CC48BE6DD
!#MSG_DOMAIN	senms_sec
!++
!
! PATROL Session Knowledge Module
!
!--
!RELEASE	9.3.00
!REVISION	0
!PACKAGE	senms
!DESCRIPTION	Monitoring Studio KM for PATROL
!PRODUCTCODE	senms


VERSION 9.306

APPLICATIONS = { 
  { NAME = "X_STRING",
	ACTIVE = True,
	SECURITY = False,
	PROPAGATE_STATE = True,
	CREATE_ICON = False,
	SUSPEND_GLOBAL_PARAMS = False,
	DISCOVERY_TIME = 0,
	DISCOVERY = PSL,
	PRE_DISCOVERY_TEXT =  1505460116 "# This object searches for strings from the underlying Monitor (File, Command Line, etc.).\
# How and where to search the string can be configured in detail.",
	DISCOVERY_TEXT =  1505460116 "#",
	HELP_FILE = "X_help.hlp",
	HELP_CONTEXT_ID = 211,
	OK_PICTURE = "X_STRING_ok",
	WRONG_PICTURE = "X_STRING_warn",
	INFO_BOX = {
		{ NAME = "ID", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1033381151 "# PATROL internal identifier of the String Search instance.\
requires X_shared;\
\
print (swSentryInfobox(get(\"sid\"), \"ID\"));"}
				}
		},
		{ NAME = "Parent ID", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1033381164 "# PATROL internal identifier of the parent object.\
requires X_shared;\
\
print (swSentryInfobox(get(\"sid\"), \"parentID\"));"}
				}
		},
		{ NAME = "Parent type", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1031745043 "# Type of the parent of the String Search instance (File, Command Line, etc.).\
requires X_string;\
\
print (swInfoboxString(get(\"sid\"), \"parentType\"));"}
				}
		},
		{ NAME = "Search", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1031745034 "# Search mode.\
requires X_string;\
\
print (swInfoboxString(get(\"sid\"), \"search\"));"}
				}
		},
		{ NAME = "Lines", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1031745028 "# Lines that are searched.\
requires X_string;\
\
print (swInfoboxString(get(\"sid\"), \"lines\"));"}
				}
		},
		{ NAME = "Skip Blank Lines", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1484325104 "# Indicates whether the blank lines are ignored.\
requires X_string;\
\
print(swInfoboxString(get(\"sid\"), \"skipBlankLines\"));"}
				}
		},
		{ NAME = "Acknowledging String", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1031745016 "# String that auto-acknowledges the String Search instance.\
requires X_string;\
\
print (swInfoboxString(get(\"sid\"), \"acknowledgingString\"));"}
				}
		},
		{ NAME = "Acknowledge", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1031745173 "# Indicates whether the auto-acknowledgment is enabled.\
requires X_string;\
\
print (swInfoboxString(get(\"sid\"), \"acknowledgeAlerts\"));"}
				}
		},
		{ NAME = "Timeout", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1031745118 "# Timeout for the auto-acknowledging.\
requires X_string;\
\
print (swInfoboxString(get(\"sid\"), \"timeout\"));"}
				}
		},
		{ NAME = "Run Alert Actions", AVAILABILITY = AVAILABLE_ALWAYS, SECURITY = SECURITY_INHERIT,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "PSL",
				  COMMAND_TEXT =  1031745209 "# Indicates when Alert Actions should be executed.\
requires X_string;\
\
print (swInfoboxString(get(\"sid\"), \"runAlertActions\"));"}
				}
		}

	},
	EV_CATALOG_NAME = "X_STRING.ctg",
	EV_CATALOG_SERIAL =0,
	PARAMETERS = {
		{	NAME = "LastMatchingLines", PARAM_TYPE = CONSUMER, ACTIVE = True, MONITOR = True, CHECK = False,
 HELP_FILE = "X_help.hlp",
 HELP_CONTEXT_ID = 211,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "OS",
				  COMMAND_TEXT =  1173719828 "# Lines matching the string search.\
# Value set by the collector of the parent object.\
# Note: The number of lines displayed can be changed to a custom value by adding the variable /SENTRY/STUDIO/ LastMatchingLinesNumber with the proper line number to the PATROL Agent configuration.\
# Default: last 50 matching lines."}
				},
			TITLE = "Last Matching Lines",
			HISTORY_TIME = "600", HISTORY_SPAN = 0, HISTORY_LEVEL = False,
			FORMAT = "%s", OUTPUT = OUTPUT_TEXT,
			AUTO_RESCALE = True, Y_AXIS_MIN = 0, Y_AXIS_MAX = 100,
			RANGES = {
			  { NAME = "BORDER", ACTIVE = False, MINIMUM = 0, MAXIMUM = 100, STATE = OK, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  },
			  { NAME = "ALARM1", ACTIVE = False, MINIMUM = 0, MAXIMUM = 100, STATE = OK, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  },
			  { NAME = "ALARM2", ACTIVE = False, MINIMUM = 100, MAXIMUM = 100, STATE = OK, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  }
			}
		},
		{	NAME = "MatchingLineCount", PARAM_TYPE = CONSUMER, ACTIVE = True, MONITOR = True, CHECK = False,
 HELP_FILE = "X_help.hlp",
 HELP_CONTEXT_ID = 211,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "OS",
				  COMMAND_TEXT =  1428649682 "# Number of lines matching the string search.\
# Value set by the collector of the parent object."}
				},
			TITLE = "Matching Line Count", UNITS = "lines",
			HISTORY_TIME = "600", HISTORY_SPAN = 0, HISTORY_LEVEL = False,
			FORMAT = "%f", OUTPUT = OUTPUT_GRAPH,
			AUTO_RESCALE = True, Y_AXIS_MIN = 0, Y_AXIS_MAX = 2147483646,
			RANGES = {
			  { NAME = "BORDER", ACTIVE = False, MINIMUM = 0, MAXIMUM = 100, STATE = OK, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  },
			  { NAME = "ALARM1", ACTIVE = True, MINIMUM = 1, MAXIMUM = 2147483646, STATE = ALARM, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  },
			  { NAME = "ALARM2", ACTIVE = False, MINIMUM = 2147483646, MAXIMUM = 2147483646, STATE = OK, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  }
			}
		},
		{	NAME = "MatchingLineRate", PARAM_TYPE = CONSUMER, ACTIVE = True, MONITOR = True, CHECK = False,
 HELP_FILE = "X_help.hlp",
 HELP_CONTEXT_ID = 211,
				BASE_COMMAND = { 
				{ COMPUTER_TYPE = "ALL_COMPUTERS", COMMAND_TYPE = "OS",
				  COMMAND_TEXT =  1418909645 "# Number of lines matching the string search per minute.\
# Value set by the collector of the parent object.\
# This parameter is only activated for string searches in log files and in never-ending command lines."}
				},
			TITLE = "Matching Line Rate", UNITS = "lines/min",
			HISTORY_TIME = "600", HISTORY_SPAN = 0, HISTORY_LEVEL = False,
			FORMAT = "%f", OUTPUT = OUTPUT_GRAPH,
			AUTO_RESCALE = True, Y_AXIS_MIN = 0, Y_AXIS_MAX = 100,
			RANGES = {
			  { NAME = "BORDER", ACTIVE = False, MINIMUM = 0, MAXIMUM = 100, STATE = OK, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  },
			  { NAME = "ALARM1", ACTIVE = False, MINIMUM = 0, MAXIMUM = 100, STATE = OK, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  },
			  { NAME = "ALARM2", ACTIVE = False, MINIMUM = 100, MAXIMUM = 100, STATE = OK, ALARM_WHEN = ALARM_INSTANT, ALARM_WHEN_N = 0
			  }
			}
		}

	}
  }
}
!11139
