<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<KMFile description="Monitoring Studio KM for PATROL" majorVersion="8" minorVersion="628" package="swsy" productcode="swsy" release="8.6.01" revision="00" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="KMFile.xsd">

  <Applications>
    <Application active="true" category="Application" createIcon="false" discovery="PSL" discoveryTime="0" displayName="Studio Number Extract" helpContextId="200" helpFile="X_help.hlp" name="X_NUMBER" okPicture="X_NUMBER_ok" propagateState="true" security="false" suspendGlobalParams="false" type="MONITOR" wrongPicture="X_NUMBER_warn">
      <PreDiscoveryText serial="1505460116"># This object extracts numeric values from the underlying Monitor (File, Command Line, etc.).
# How and where to extract the numeric values can be configured in detail.
# Some additional operations can be performed on the numeric values before reporting on the Value parameter (conversion, delta, etc.).</PreDiscoveryText>
      <DiscoveryText serial="1505460116">#</DiscoveryText>
      <InfoBoxes>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="ID" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1033381023"># PATROL internal identifier of the Numeric Value extraction instance.
requires X_shared;

print (swSentryInfobox(get("sid"), "ID"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Parent ID" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1033381034"># PATROL internal identifier of the parent object.
requires X_shared;

print (swSentryInfobox(get("sid"), "parentID"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Parent Type" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1028900919"># Type of the parent of the Numeric Value Extraction instance (File, Command Line, etc.).
requires X_number;

print (swInfoboxNumber(get("sid"), "parentType"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Line Mode" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1028900949"># Method used to select lines to search for the numeric value.
requires X_number;

print (swInfoboxNumber(get("sid"), "lineMode"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Column Mode" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1028901039"># Method chosen to search and extract the numeric value in the line.
requires X_number;

print (swInfoboxNumber(get("sid"), "columnMode"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Parameter Type" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1028901051"># Type of the parameter.
requires X_number;

print (swInfoboxNumber(get("sid"), "parameterType"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Line Numbers" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1028901071"># Line numbers from which the numeric value will be extracted.
requires X_number;

print (swInfoboxNumber(get("sid"), "lineNumbers"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Regular Expression" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1028901104"># Regular expression used to select the lines where the numeric value will be searched.
requires X_number;

print (swInfoboxNumber(get("sid"), "regularExpression"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Skip Blank Lines" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1028901121"># Indicates whether or not blank lines are skipped when searching for the numeric value.
requires X_number;

print (swInfoboxNumber(get("sid"), "skipBlankLines"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="After/Before" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1028901258"># Searches for the numeric value either after or before the specified string.
requires X_number;

print (swInfoboxNumber(get("sid"), "beforeAfter"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Specified String" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1028901151"># Searches for the numeric value before or after this specified string.
requires X_number;

print (swInfoboxNumber(get("sid"), "specifiedString"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Character Offset" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1028901187"># Character offset in which the numeric value is searched.
requires X_number;

print (swInfoboxNumber(get("sid"), "characterOffset"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Field Number" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1028901198"># Number of the field in which the numeric value will be searched.
requires X_number;

print (swInfoboxNumber(get("sid"), "fieldNumber"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Field Separators" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1028901209"># Characters that separate the fields in a text line.
requires X_number;

print (swInfoboxNumber(get("sid"), "fieldSeparator"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Unique Separator" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1028901219"># Considers consecutive separators as a unique separator.
requires X_number;

print (swInfoboxNumber(get("sid"), "uniqueSeparator"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
      </InfoBoxes>
      <Parameters>
        <Parameter active="true" autoRescale="false" check="false" format="%f" helpContextId="200" helpFile="X_help.hlp" historyLevel="false" historySpan="0" historyTime="600" monitor="true" name="Present" output="OUTPUT_GRAPH" title="Present" type="CONSUMER" units="{0 = Missing ; 1 = Present}" yAxisMax="1" yAxisMin="0">
          <ParamMetadata applicationCollectionStatus="false" availability="true" config="false" delta="false" graphByDefault="true" kpi="false" monitorForAbnormalities="false" normalDistribution="true" responseTime="false" statistical="false"/>
          <BaseCommand>
            <Command commandType="OS" computerType="ALL_COMPUTERS">
              <Commandtext serial="1542137302">exit;</Commandtext>
            </Command>
          </BaseCommand>
          <Ranges>
            <Range active="false" alarmWhen="ALARM_INSTANT" alarmWhenN="0" maximum="1" minimum="0" name="BORDER" state="OK"/>
            <Range active="false" alarmWhen="ALARM_INSTANT" alarmWhenN="0" maximum="0" minimum="0" name="ALARM1" state="ALARM"/>
            <Range active="false" alarmWhen="ALARM_INSTANT" alarmWhenN="0" maximum="1" minimum="1" name="ALARM2" state="OK"/>
          </Ranges>
        </Parameter>
        <Parameter active="true" autoRescale="true" check="false" format="%f" helpContextId="200" helpFile="X_help.hlp" historyLevel="false" historySpan="0" historyTime="600" monitor="true" name="Value" output="OUTPUT_GRAPH" title="Value" type="CONSUMER" yAxisMax="100" yAxisMin="0">
          <ParamMetadata applicationCollectionStatus="false" availability="false" config="false" delta="false" graphByDefault="true" kpi="false" monitorForAbnormalities="false" normalDistribution="true" responseTime="false" statistical="true"/>
          <BaseCommand>
            <Command commandType="OS" computerType="ALL_COMPUTERS">
              <Commandtext serial="1542124365"># Value returned by the Numeric Value extraction (no value will be reported if no number is found).
# Value set by the collector of the parent’s object.</Commandtext>
            </Command>
          </BaseCommand>
          <Ranges>
            <Range active="false" alarmWhen="ALARM_INSTANT" alarmWhenN="0" maximum="100" minimum="0" name="BORDER" state="OK"/>
            <Range active="false" alarmWhen="ALARM_INSTANT" alarmWhenN="0" maximum="100" minimum="0" name="ALARM1" state="OK"/>
            <Range active="false" alarmWhen="ALARM_INSTANT" alarmWhenN="0" maximum="100" minimum="100" name="ALARM2" state="OK"/>
          </Ranges>
        </Parameter>
      </Parameters>
    </Application>
  </Applications>

</KMFile>
