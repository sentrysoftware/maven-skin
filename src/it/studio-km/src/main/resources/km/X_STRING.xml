<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<KMFile description="Monitoring Studio KM for PATROL" majorVersion="9" minorVersion="306" package="senms" productcode="senms" release="9.3.00" revision="0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="KMFile.xsd">

  <Applications>
    <Application EVCatalogName="X_STRING.ctg" EVCatalogSerial="0" active="true" category="Application" createIcon="false" discovery="PSL" discoveryTime="0" displayName="Studio String Search" helpContextId="211" helpFile="X_help.hlp" name="X_STRING" okPicture="X_STRING_ok" propagateState="true" security="false" suspendGlobalParams="false" type="MONITOR" wrongPicture="X_STRING_warn">
      <PreDiscoveryText serial="1505460116"># This object searches for strings from the underlying Monitor (File, Command Line, etc.).
# How and where to search the string can be configured in detail.</PreDiscoveryText>
      <DiscoveryText serial="1505460116">#</DiscoveryText>
      <InfoBoxes>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="ID" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1033381151"># PATROL internal identifier of the String Search instance.
requires X_shared;

print (swSentryInfobox(get("sid"), "ID"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Parent ID" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1033381164"># PATROL internal identifier of the parent object.
requires X_shared;

print (swSentryInfobox(get("sid"), "parentID"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Parent type" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1031745043"># Type of the parent of the String Search instance (File, Command Line, etc.).
requires X_string;

print (swInfoboxString(get("sid"), "parentType"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Search" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1031745034"># Search mode.
requires X_string;

print (swInfoboxString(get("sid"), "search"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Lines" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1031745028"># Lines that are searched.
requires X_string;

print (swInfoboxString(get("sid"), "lines"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Skip Blank Lines" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1484325104"># Indicates whether the blank lines are ignored.
requires X_string;

print(swInfoboxString(get("sid"), "skipBlankLines"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Acknowledging String" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1031745016"># String that auto-acknowledges the String Search instance.
requires X_string;

print (swInfoboxString(get("sid"), "acknowledgingString"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Acknowledge" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1031745173"># Indicates whether the auto-acknowledgment is enabled.
requires X_string;

print (swInfoboxString(get("sid"), "acknowledgeAlerts"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Timeout" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1031745118"># Timeout for the auto-acknowledging.
requires X_string;

print (swInfoboxString(get("sid"), "timeout"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
        <InfoBox annotate="false" autoID="false" available="AVAILABLE_ALWAYS" id="" name="Run Alert Actions" security="SECURITY_INHERIT">
          <BaseCommand>
            <Command commandType="PSL" computerType="ALL_COMPUTERS">
              <Commandtext serial="1031745209"># Indicates when Alert Actions should be executed.
requires X_string;

print (swInfoboxString(get("sid"), "runAlertActions"));</Commandtext>
            </Command>
          </BaseCommand>
        </InfoBox>
      </InfoBoxes>
      <Parameters>
        <Parameter active="true" autoRescale="true" check="false" format="%s" helpContextId="211" helpFile="X_help.hlp" historyLevel="false" historySpan="0" historyTime="600" monitor="true" name="LastMatchingLines" output="OUTPUT_TEXT" title="Last Matching Lines" type="CONSUMER" yAxisMax="100" yAxisMin="0">
          <ParamMetadata applicationCollectionStatus="false" availability="false" config="false" delta="false" graphByDefault="false" kpi="false" monitorForAbnormalities="false" normalDistribution="false" responseTime="false" statistical="false"/>
          <BaseCommand>
            <Command commandType="OS" computerType="ALL_COMPUTERS">
              <Commandtext serial="1173719828"># Lines matching the string search.
# Value set by the collector of the parent object.
# Note: The number of lines displayed can be changed to a custom value by adding the variable /SENTRY/STUDIO/ LastMatchingLinesNumber with the proper line number to the PATROL Agent configuration.
# Default: last 50 matching lines.</Commandtext>
            </Command>
          </BaseCommand>
          <Ranges>
            <Range active="false" alarmWhen="ALARM_INSTANT" alarmWhenN="0" maximum="100" minimum="0" name="BORDER" state="OK"/>
            <Range active="false" alarmWhen="ALARM_INSTANT" alarmWhenN="0" maximum="100" minimum="0" name="ALARM1" state="OK"/>
            <Range active="false" alarmWhen="ALARM_INSTANT" alarmWhenN="0" maximum="100" minimum="100" name="ALARM2" state="OK"/>
          </Ranges>
        </Parameter>
        <Parameter active="true" autoRescale="true" check="false" format="%f" helpContextId="211" helpFile="X_help.hlp" historyLevel="false" historySpan="0" historyTime="600" monitor="true" name="MatchingLineCount" output="OUTPUT_GRAPH" title="Matching Line Count" type="CONSUMER" units="lines" yAxisMax="2147483646" yAxisMin="0">
          <ParamMetadata applicationCollectionStatus="false" availability="false" config="false" delta="false" graphByDefault="true" kpi="false" monitorForAbnormalities="false" normalDistribution="true" responseTime="false" statistical="true"/>
          <BaseCommand>
            <Command commandType="OS" computerType="ALL_COMPUTERS">
              <Commandtext serial="1428649682"># Number of lines matching the string search.
# Value set by the collector of the parent object.</Commandtext>
            </Command>
          </BaseCommand>
          <Ranges>
            <Range active="false" alarmWhen="ALARM_INSTANT" alarmWhenN="0" maximum="100" minimum="0" name="BORDER" state="OK"/>
            <Range active="true" alarmWhen="ALARM_INSTANT" alarmWhenN="0" maximum="2147483646" minimum="1" name="ALARM1" state="ALARM"/>
            <Range active="false" alarmWhen="ALARM_INSTANT" alarmWhenN="0" maximum="2147483646" minimum="2147483646" name="ALARM2" state="OK"/>
          </Ranges>
        </Parameter>
        <Parameter active="true" autoRescale="true" check="false" format="%f" helpContextId="211" helpFile="X_help.hlp" historyLevel="false" historySpan="0" historyTime="600" monitor="true" name="MatchingLineRate" output="OUTPUT_GRAPH" title="Matching Line Rate" type="CONSUMER" units="lines/min" yAxisMax="100" yAxisMin="0">
          <ParamMetadata applicationCollectionStatus="false" availability="false" config="false" delta="false" graphByDefault="true" kpi="false" monitorForAbnormalities="false" normalDistribution="false" responseTime="false" statistical="true"/>
          <BaseCommand>
            <Command commandType="OS" computerType="ALL_COMPUTERS">
              <Commandtext serial="1418909645"># Number of lines matching the string search per minute.
# Value set by the collector of the parent object.
# This parameter is only activated for string searches in log files and in never-ending command lines.</Commandtext>
            </Command>
          </BaseCommand>
          <Ranges>
            <Range active="false" alarmWhen="ALARM_INSTANT" alarmWhenN="0" maximum="100" minimum="0" name="BORDER" state="OK"/>
            <Range active="false" alarmWhen="ALARM_INSTANT" alarmWhenN="0" maximum="100" minimum="0" name="ALARM1" state="OK"/>
            <Range active="false" alarmWhen="ALARM_INSTANT" alarmWhenN="0" maximum="100" minimum="100" name="ALARM2" state="OK"/>
          </Ranges>
        </Parameter>
      </Parameters>
    </Application>
  </Applications>

</KMFile>
